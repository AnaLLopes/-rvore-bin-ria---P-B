// Source code is decompiled from a .class file using FernFlower decompiler.
import java.util.Scanner;

public class Main {
   public Main() {
   }

   public static void main(String[] args) {
      Scanner scan = new Scanner(System.in);
      BinarySearchTree tree = new BinarySearchTree();

      int op;
      do {
         System.out.println("\n\u00c1RVORE BIN\u00c1RIA DE PESQUISA");
         System.out.println("---------------------------------------");
         System.out.println("1 | Adicionar nodo");
         System.out.println("2 | Remover nodo");
         System.out.println("3 | Pesquisar nodo");
         System.out.println("4 | Exibir a \u00e1rvore");
         System.out.println("5 | Mostrar informa\u00e7\u00f5es");
         System.out.println("6 | Mostrar caminhamentos");
         System.out.println("7 | Soma de valores entre nodos");
         System.out.println("8 | Esvaziar \u00e1rvore");
         System.out.println("0 | Sair do programa");
         System.out.println("---------------------------------------");
         System.out.println("Digite a op\u00e7\u00e3o desejada: ");
         op = scan.nextInt();
         int value;
         switch (op) {
            case 1:
               System.out.println("Informe um valor inteiro:");
               value = scan.nextInt();
               tree.add(value);
               break;
            case 2:
               System.out.println("Informe um valor inteiro:");
               value = scan.nextInt();
               if (!tree.remove(value)) {
                  System.out.println("Valor n\u00e3o encontrado!");
               }
               break;
            case 3:
               System.out.println("Informe um valor inteiro:");
               value = scan.nextInt();
               if (tree.contains(value) != null) {
                  System.out.print("Valor encontrado!");
               } else {
                  System.out.println("Valor n\u00e3o encontrado!");
               }
               break;
            case 4:
               tree.printTree();
               break;
            case 5:
               tree.treeInfo();
               break;
            case 6:
               tree.caminhamentos();
            case 7:
            default:
               break;
            case 8:
               tree.clearTree();
         }
      } while(op != 0);

   }
}
